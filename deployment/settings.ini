;
; vigirrd - Pylons development environment configuration
;
; The %(here)s variable will be replaced with the parent directory of this file
;
; This file is for deployment specific config options -- other configuration
; that is always required for the app is done in the config directory,
; and generally should not be modified by end users.

[DEFAULT]
debug = false
; Uncomment and replace with the address which should receive any error reports
;email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 80

[app:main]
use = egg:vigirrd

;
; Configuration de VigiRRD
;

;
; 1 - Configuration de la base de données.
;

; URL d'accès à la base de données.
sqlalchemy.url=sqlite:////var/cache/vigilo/vigirrd/db/vigirrd.db

; Options de bas niveau de la couche ORM
; (pour déboguer les requêtes SQL).
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

;
; 2 - Configuration des éléments de sécurité.
;

; La clé secrète utilisée pour chiffrer/déchiffrer la session.
; Vous DEVEZ changer cette valeur avant la mise en production.
; Vous pouvez utilisez la même valeur que pour la clé
; "sa_auth.cookie_secret".
beaker.session.secret = vigilo

; La clé secrète utilisée pour chiffrer/déchiffrer le cookie
; d'authentification.
; Vous DEVEZ changer cette valeur avant la mise en production.
; Vous pouvez utilisez la même valeur que pour la clé
; "beaker.session.secret".
sa_auth.cookie_secret = vigilo

;
; 3 - Configuration de l'interface.
;

; La langue par défaut de l'interface.
; VigiRRD n'est pas traduit (interface de débogage).
;lang=fr

; Emplacement du cache d'images.
image_cache_dir = /var/cache/vigilo/vigirrd/img

; Dossier racine des fichiers RRD contenant
; les données de métrologie.
; Il s'agit du dossier de destination configuré
; pour le connecteur de métrologie (connector-metro).
rrd_base = /var/lib/vigilo/rrd

; Cette option permet de configurer l'arborescence des dossiers dans lesquels
; seront stockés les RRD. Les valeurs suivantes sont possibles :
; - flat : le dossier au nom de l'hôte sera placé à la racine de rrd_base
; (ci-dessus). Convient pour un faible nombre d'hôtes.
; - name : une arborescence sera créée en utilisant les deux premiers
; caractères du nom de l'hôte. Convient pour des installations de grande
; taille dans lesquelles les hôtes ont des noms dont les deux premiers
; caractères diffèrent.
; - hash : une arborescence sera créé en utilisant les deux premiers caractères
; du hash MD5 du nom de l'hôte. Convient pour des installations de grande
; taille dont les hôtes ont des noms avec un préfixe commun.
; Cette option doit être réglée à l'identique de celle du connector-metro
rrd_path_mode = hash

; Fichier contenant la liste des modèles de graphes et leurs propriétés
templates_file = %(here)s/templates.py

; Fichier contenant la configuration de la métrologie pour cette instance de
; VigiRRD. Ce fchier est généré et mis à jour automatiquement par VigiConf.
vigiconf_file = %(here)s/../vigiconf/prod/vigirrd.conf.py

; Caractère de séparation des champs dans
; l'export CSV.
csv_delimiter_char = ;

; Caractère utilisé pour délimiter les champs
; dans l'export CSV.
csv_quote_char = "
; Le guillemet qui termine ce commentaire
; sert uniquement à corriger la coloration
; syntaxique dans certains éditeurs. "

; Caractère d'échappement pour les caractères
; spéciaux (définis par csv_delimiter_char,
; csv_quote_char et csv_escape_char).
csv_escape_char = \

; (optionnel) Format des dates dans l'export CSV.
; Voir http://docs.python.org/release/2.5/lib/module-time.html
; pour les caractères de formattage disponibles.
; Si omis, alors le timestamp UNIX est utilisé comme valeur.
csv_date_format = %%d/%%m/%%Y %%H:%%M:%%S


; (optionnel) Indique si le formattage des dates et des valeurs
; dans l'export CSV doit respecter les conventions de la langue
; de l'utilisateur (locale) ou non.
; Si omis, alors cette valeur est considérée comme valant False
; (les valeurs ne respectent pas forcément la locale).
csv_respect_locale = True

;
; 4 - Configuration des proxies Nagios & RRDgraph.
;
; VigiRRD n'utilise aucun proxy.

;
; 5 - Configuration avancée des sessions.
;

; Le nom du dossier dans lequel les fichiers de sessions sont conservés.
cache_dir = /var/cache/vigilo/sessions

; Le nom du cookie de session qui sera créé sur le navigateur
; du client.
beaker.session.key = vigilo

; If you'd like to fine-tune the individual locations of the cache data dirs
; for the Cache data, or the Session saves, un-comment the desired settings
; here:
;beaker.cache.data_dir = %(here)s/data/cache
;beaker.session.data_dir = %(here)s/data/sessions

;
; 6 - Autres options.
; Pensez à configurer le logging dans les sections
; "loggers", "handlers" & "formatters" ci-dessous.
;

; Doit être laissé à true pour obtenir une application fonctionnelle.
full_stack = true

; Doit valoir false en production (risque de sécurité sinon).
# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

; Logging configuration
; Add additional loggers, handlers, formatters here
; Uses python's logging config file format
; http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigirrd

[handlers]
keys = console,root_log,vigirrd_log

[formatters]
keys = generic

; If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = root_log

[logger_vigirrd]
level = INFO
handlers = vigirrd_log
qualname = vigirrd

; If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_root_log]
class = handlers.TimedRotatingFileHandler
args = ('/var/log/vigilo/vigirrd/root.log', 'D', 30, 12)
level = DEBUG
formatter = generic

[handler_vigirrd_log]
class = handlers.TimedRotatingFileHandler
args = ('/var/log/vigilo/vigirrd/vigirrd.log', 'D', 30, 12)
level = DEBUG
formatter = generic

; If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
class=vigilo.common.logging.VigiloFormatter
